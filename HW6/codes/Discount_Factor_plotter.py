import tensorflow as tf
import gym
import os
from sys import getsizeof
import numpy as np
import matplotlib.pyplot as plt

a92=[72.4, 87.48, 83.22, 98.42, 107.02, 129.4, 109.16, 126.92, 124.08, 128.46, 135.52, 122.28, 140.44, 141.8, 145.84, 155.58, 140.28, 151.38, 153.6, 141.8, 140.78, 140.0, 146.26, 131.7, 145.34, 155.82, 151.06, 151.62, 161.04, 153.4, 143.92, 158.06, 163.22, 161.54, 175.84, 158.14, 160.12, 164.08, 158.9, 166.46, 161.62, 158.36, 156.82, 171.72, 161.28, 159.68, 164.12, 159.0, 179.9, 160.74, 177.76, 168.18, 159.34, 174.22, 175.38, 176.68, 162.72, 165.44, 169.4, 176.08, 170.38, 188.26, 167.3, 184.12, 170.16, 171.08, 171.4, 179.46, 177.6, 180.18, 179.8, 179.64, 171.72, 179.66, 201.26, 177.42, 185.3, 180.88, 181.92, 189.14, 186.5, 179.22, 198.52, 183.16, 160.76, 197.3, 189.82, 208.7, 198.44, 207.88, 190.52, 192.96, 202.54, 187.46, 193.76, 191.2, 187.52, 197.12, 206.42, 211.12, 214.52, 191.82, 204.16, 164.54, 183.26, 205.4, 214.0, 200.44, 199.88, 190.7]

a95=[14.3, 95.64, 77.16, 85.72, 98.74, 93.14, 86.38, 92.22, 102.66, 95.8, 124.02, 96.96, 106.2, 112.24, 113.2, 97.56, 117.68, 113.88, 123.38, 136.84, 132.08, 145.34, 159.9, 166.76, 184.72, 223.66, 213.56, 242.8, 280.68, 293.28, 229.7, 310.28, 352.82, 346.76, 312.02, 380.18, 415.9, 450.42, 369.66, 413.1, 448.64, 495.18, 472.02, 480.74, 428.96, 473.32, 499.54, 483.8, 526.82, 456.26, 548.06, 477.08, 495.36, 554.06, 439.44, 540.0, 478.76, 520.26, 589.42, 475.16, 474.22, 498.44, 475.18, 520.6, 487.54, 510.72, 527.04, 533.42, 513.26, 511.16, 489.86, 482.5, 527.86, 527.76, 539.94, 520.92, 487.84, 555.9, 569.54, 516.9, 486.14, 555.76, 552.18, 558.02, 501.34, 578.16, 554.74, 581.16, 512.12, 538.68, 555.16, 533.56, 546.0, 579.8, 505.64, 576.06, 560.14, 564.0, 566.54, 618.44, 584.44, 576.6, 538.8, 518.92, 551.98, 560.96]


a97=[22.84, 95.3, 93.04, 106.68, 110.18, 131.96, 132.1, 132.18, 203.56, 409.28, 388.16, 432.18, 400.6, 436.98, 471.78, 455.76, 470.26, 492.0, 513.12, 511.66, 531.98, 518.54, 527.86, 509.76, 600.78, 555.12, 553.5, 598.86, 540.86, 651.6, 611.42, 663.94, 682.52, 606.82, 671.96, 648.04, 673.4, 687.88, 644.8, 692.92, 645.28, 744.12, 726.52, 709.52, 736.24, 747.0, 783.66, 744.92, 745.88, 775.58, 775.5, 716.56, 772.26, 786.16, 782.1, 771.42, 751.2, 672.76, 780.02, 728.24, 757.1, 841.98, 799.3, 834.0, 772.92, 810.3, 794.0, 800.56, 777.82, 824.06, 805.02, 786.36, 819.52, 782.44, 809.86, 813.6, 755.32, 809.44, 792.52, 598.0, 628.98, 620.2, 632.84, 616.96, 559.3, 641.0, 668.68, 656.48, 714.26, 688.52, 666.78, 701.3, 706.68, 702.04, 704.36, 661.96, 736.92, 734.34, 694.86, 721.32, 703.72, 750.76, 673.3, 710.86, 725.88, 678.1, 744.72]


a98=[106.92, 9.82, 10.04, 456.18, 626.66, 780.02, 789.82, 837.64, 776.82, 778.76, 841.04, 798.4, 779.2, 873.08, 821.0, 832.48, 820.72, 870.12, 862.92, 860.98, 871.8, 835.34, 851.52, 872.7, 890.88, 855.52, 877.18, 887.42, 889.3, 889.64, 863.88, 893.42, 883.64, 866.48, 880.92, 880.96, 877.5, 880.18, 875.04, 865.22, 865.14, 896.12, 887.88, 900.24, 892.16, 874.92, 900.54, 875.94, 905.08, 893.18, 910.8, 880.1, 910.94, 888.24, 910.46, 905.22, 883.22, 929.24, 902.42, 890.5, 931.08, 903.64, 887.68, 922.62, 916.66, 919.22, 923.78, 923.0, 905.34, 925.98, 895.96, 944.84, 920.7, 918.68, 936.84, 946.8, 965.64, 913.5, 934.32, 906.22, 893.2, 912.98, 910.32, 913.16, 929.6, 940.14, 944.1, 929.98, 924.5, 930.62, 913.06, 914.4, 891.08, 951.4, 920.16, 930.0, 898.74, 901.18, 892.4, 929.18, 929.94]


a99=[9.48, 11.68, 117.48, 77.62, 371.76, 208.6, 875.48, 909.62, 997.1, 996.62, 989.0, 990.58, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 999.76, 1000.0, 998.04, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0]

while len(a92)>100:
    a92.pop()

while len(a95)>100:
    a95.pop()

while len(a97)>100:
    a97.pop()

while len(a98)>100:
    a98.pop()

while len(a99)<100:
    a99.append(1000)



fig, ax = plt.subplots()
ax.plot(np.arange(100),a99,label='gamma = 0.99')
ax.plot(np.arange(100),a98,label='gamma = 0.98')
ax.plot(np.arange(100),a97,label='gamma = 0.97')
ax.plot(np.arange(100),a95,label='gamma = 0.95')
ax.plot(np.arange(100),a92,label='gamma = 0.92')

ax.legend(bbox_to_anchor=(1.01, 1), loc='upper left', borderaxespad=0.)
plt.title("Average Reward of 50 games per epoch for \n different discounted factors during training")
plt.xlabel('Epoch')
plt.ylabel('Average Reward')


plt.show(dpi=200)
